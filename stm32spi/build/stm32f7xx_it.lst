ARM GAS  C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f7xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-sp-d16
  25              	NMI_Handler:
  26              	.LFB136:
  27              		.file 1 "Src/stm32f7xx_it.c"
   1:Src/stm32f7xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f7xx_it.c **** /**
   3:Src/stm32f7xx_it.c ****   ******************************************************************************
   4:Src/stm32f7xx_it.c ****   * @file    stm32f7xx_it.c
   5:Src/stm32f7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f7xx_it.c ****   ******************************************************************************
   7:Src/stm32f7xx_it.c ****   *
   8:Src/stm32f7xx_it.c ****   * COPYRIGHT(c) 2018 STMicroelectronics
   9:Src/stm32f7xx_it.c ****   *
  10:Src/stm32f7xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  11:Src/stm32f7xx_it.c ****   * are permitted provided that the following conditions are met:
  12:Src/stm32f7xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  13:Src/stm32f7xx_it.c ****   *      this list of conditions and the following disclaimer.
  14:Src/stm32f7xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  15:Src/stm32f7xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  16:Src/stm32f7xx_it.c ****   *      and/or other materials provided with the distribution.
  17:Src/stm32f7xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  18:Src/stm32f7xx_it.c ****   *      may be used to endorse or promote products derived from this software
  19:Src/stm32f7xx_it.c ****   *      without specific prior written permission.
  20:Src/stm32f7xx_it.c ****   *
  21:Src/stm32f7xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Src/stm32f7xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Src/stm32f7xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24:Src/stm32f7xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  25:Src/stm32f7xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  26:Src/stm32f7xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Src/stm32f7xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:Src/stm32f7xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  29:Src/stm32f7xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  30:Src/stm32f7xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:Src/stm32f7xx_it.c ****   *
ARM GAS  C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s 			page 2


  32:Src/stm32f7xx_it.c ****   ******************************************************************************
  33:Src/stm32f7xx_it.c ****   */
  34:Src/stm32f7xx_it.c **** /* USER CODE END Header */
  35:Src/stm32f7xx_it.c **** 
  36:Src/stm32f7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  37:Src/stm32f7xx_it.c **** #include "main.h"
  38:Src/stm32f7xx_it.c **** #include "stm32f7xx_it.h"
  39:Src/stm32f7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  40:Src/stm32f7xx_it.c **** /* USER CODE BEGIN Includes */
  41:Src/stm32f7xx_it.c **** /* USER CODE END Includes */
  42:Src/stm32f7xx_it.c **** 
  43:Src/stm32f7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  44:Src/stm32f7xx_it.c **** /* USER CODE BEGIN TD */
  45:Src/stm32f7xx_it.c **** 
  46:Src/stm32f7xx_it.c **** /* USER CODE END TD */
  47:Src/stm32f7xx_it.c **** 
  48:Src/stm32f7xx_it.c **** /* Private define ------------------------------------------------------------*/
  49:Src/stm32f7xx_it.c **** /* USER CODE BEGIN PD */
  50:Src/stm32f7xx_it.c ****  
  51:Src/stm32f7xx_it.c **** /* USER CODE END PD */
  52:Src/stm32f7xx_it.c **** 
  53:Src/stm32f7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  54:Src/stm32f7xx_it.c **** /* USER CODE BEGIN PM */
  55:Src/stm32f7xx_it.c **** 
  56:Src/stm32f7xx_it.c **** /* USER CODE END PM */
  57:Src/stm32f7xx_it.c **** 
  58:Src/stm32f7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  59:Src/stm32f7xx_it.c **** /* USER CODE BEGIN PV */
  60:Src/stm32f7xx_it.c **** 
  61:Src/stm32f7xx_it.c **** //If the "completed2" flag is set to 1, the data exchange via SPI 2 is finished. If
  62:Src/stm32f7xx_it.c **** //it is set to 0, the SPI2 peripheral is busy. Thus, we should reset the flag when
  63:Src/stm32f7xx_it.c **** //starting the transmission and set it when the transmission is completed. So, in
  64:Src/stm32f7xx_it.c **** //this file, they will be set in the interrupt handlers.
  65:Src/stm32f7xx_it.c **** uint8_t completed2 = 1;
  66:Src/stm32f7xx_it.c **** uint8_t completed3 = 1;
  67:Src/stm32f7xx_it.c **** 
  68:Src/stm32f7xx_it.c **** /* USER CODE END PV */
  69:Src/stm32f7xx_it.c **** 
  70:Src/stm32f7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  71:Src/stm32f7xx_it.c **** /* USER CODE BEGIN PFP */
  72:Src/stm32f7xx_it.c **** 
  73:Src/stm32f7xx_it.c **** /* USER CODE END PFP */
  74:Src/stm32f7xx_it.c **** 
  75:Src/stm32f7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  76:Src/stm32f7xx_it.c **** /* USER CODE BEGIN 0 */
  77:Src/stm32f7xx_it.c **** 
  78:Src/stm32f7xx_it.c **** /* USER CODE END 0 */
  79:Src/stm32f7xx_it.c **** 
  80:Src/stm32f7xx_it.c **** /* External variables --------------------------------------------------------*/
  81:Src/stm32f7xx_it.c **** extern DMA_HandleTypeDef hdma_spi2_tx;
  82:Src/stm32f7xx_it.c **** extern DMA_HandleTypeDef hdma_spi3_tx;
  83:Src/stm32f7xx_it.c **** /* USER CODE BEGIN EV */
  84:Src/stm32f7xx_it.c **** 
  85:Src/stm32f7xx_it.c **** /* USER CODE END EV */
  86:Src/stm32f7xx_it.c **** 
  87:Src/stm32f7xx_it.c **** /******************************************************************************/
  88:Src/stm32f7xx_it.c **** /*           Cortex-M7 Processor Interruption and Exception Handlers          */ 
ARM GAS  C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s 			page 3


  89:Src/stm32f7xx_it.c **** /******************************************************************************/
  90:Src/stm32f7xx_it.c **** /**
  91:Src/stm32f7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  92:Src/stm32f7xx_it.c ****   */
  93:Src/stm32f7xx_it.c **** void NMI_Handler(void)
  94:Src/stm32f7xx_it.c **** {
  28              		.loc 1 94 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE136:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu fpv5-sp-d16
  45              	HardFault_Handler:
  46              	.LFB137:
  95:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  96:Src/stm32f7xx_it.c **** 
  97:Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  98:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  99:Src/stm32f7xx_it.c **** 
 100:Src/stm32f7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
 101:Src/stm32f7xx_it.c **** }
 102:Src/stm32f7xx_it.c **** 
 103:Src/stm32f7xx_it.c **** /**
 104:Src/stm32f7xx_it.c ****   * @brief This function handles Hard fault interrupt.
 105:Src/stm32f7xx_it.c ****   */
 106:Src/stm32f7xx_it.c **** void HardFault_Handler(void)
 107:Src/stm32f7xx_it.c **** {
  47              		.loc 1 107 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  54 0000 FEE7     		b	.L3
  55              		.cfi_endproc
  56              	.LFE137:
  58              		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	1
  60              		.global	MemManage_Handler
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv5-sp-d16
  66              	MemManage_Handler:
  67              	.LFB138:
 108:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 109:Src/stm32f7xx_it.c **** 
ARM GAS  C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s 			page 4


 110:Src/stm32f7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 111:Src/stm32f7xx_it.c ****   while (1)
 112:Src/stm32f7xx_it.c ****   {
 113:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 114:Src/stm32f7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 115:Src/stm32f7xx_it.c ****   }
 116:Src/stm32f7xx_it.c **** }
 117:Src/stm32f7xx_it.c **** 
 118:Src/stm32f7xx_it.c **** /**
 119:Src/stm32f7xx_it.c ****   * @brief This function handles Memory management fault.
 120:Src/stm32f7xx_it.c ****   */
 121:Src/stm32f7xx_it.c **** void MemManage_Handler(void)
 122:Src/stm32f7xx_it.c **** {
  68              		.loc 1 122 0
  69              		.cfi_startproc
  70              		@ Volatile: function does not return.
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74              	.L5:
  75 0000 FEE7     		b	.L5
  76              		.cfi_endproc
  77              	.LFE138:
  79              		.section	.text.BusFault_Handler,"ax",%progbits
  80              		.align	1
  81              		.global	BusFault_Handler
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu fpv5-sp-d16
  87              	BusFault_Handler:
  88              	.LFB139:
 123:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 124:Src/stm32f7xx_it.c **** 
 125:Src/stm32f7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 126:Src/stm32f7xx_it.c ****   while (1)
 127:Src/stm32f7xx_it.c ****   {
 128:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 129:Src/stm32f7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 130:Src/stm32f7xx_it.c ****   }
 131:Src/stm32f7xx_it.c **** }
 132:Src/stm32f7xx_it.c **** 
 133:Src/stm32f7xx_it.c **** /**
 134:Src/stm32f7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 135:Src/stm32f7xx_it.c ****   */
 136:Src/stm32f7xx_it.c **** void BusFault_Handler(void)
 137:Src/stm32f7xx_it.c **** {
  89              		.loc 1 137 0
  90              		.cfi_startproc
  91              		@ Volatile: function does not return.
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95              	.L7:
  96 0000 FEE7     		b	.L7
  97              		.cfi_endproc
  98              	.LFE139:
ARM GAS  C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s 			page 5


 100              		.section	.text.UsageFault_Handler,"ax",%progbits
 101              		.align	1
 102              		.global	UsageFault_Handler
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu fpv5-sp-d16
 108              	UsageFault_Handler:
 109              	.LFB140:
 138:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 139:Src/stm32f7xx_it.c **** 
 140:Src/stm32f7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 141:Src/stm32f7xx_it.c ****   while (1)
 142:Src/stm32f7xx_it.c ****   {
 143:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 144:Src/stm32f7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 145:Src/stm32f7xx_it.c ****   }
 146:Src/stm32f7xx_it.c **** }
 147:Src/stm32f7xx_it.c **** 
 148:Src/stm32f7xx_it.c **** /**
 149:Src/stm32f7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 150:Src/stm32f7xx_it.c ****   */
 151:Src/stm32f7xx_it.c **** void UsageFault_Handler(void)
 152:Src/stm32f7xx_it.c **** {
 110              		.loc 1 152 0
 111              		.cfi_startproc
 112              		@ Volatile: function does not return.
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.L9:
 117 0000 FEE7     		b	.L9
 118              		.cfi_endproc
 119              	.LFE140:
 121              		.section	.text.SVC_Handler,"ax",%progbits
 122              		.align	1
 123              		.global	SVC_Handler
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu fpv5-sp-d16
 129              	SVC_Handler:
 130              	.LFB141:
 153:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 154:Src/stm32f7xx_it.c **** 
 155:Src/stm32f7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 156:Src/stm32f7xx_it.c ****   while (1)
 157:Src/stm32f7xx_it.c ****   {
 158:Src/stm32f7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 159:Src/stm32f7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 160:Src/stm32f7xx_it.c ****   }
 161:Src/stm32f7xx_it.c **** }
 162:Src/stm32f7xx_it.c **** 
 163:Src/stm32f7xx_it.c **** /**
 164:Src/stm32f7xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 165:Src/stm32f7xx_it.c ****   */
 166:Src/stm32f7xx_it.c **** void SVC_Handler(void)
ARM GAS  C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s 			page 6


 167:Src/stm32f7xx_it.c **** {
 131              		.loc 1 167 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		@ link register save eliminated.
 136 0000 7047     		bx	lr
 137              		.cfi_endproc
 138              	.LFE141:
 140              		.section	.text.DebugMon_Handler,"ax",%progbits
 141              		.align	1
 142              		.global	DebugMon_Handler
 143              		.syntax unified
 144              		.thumb
 145              		.thumb_func
 146              		.fpu fpv5-sp-d16
 148              	DebugMon_Handler:
 149              	.LFB142:
 168:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 169:Src/stm32f7xx_it.c **** 
 170:Src/stm32f7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 171:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 172:Src/stm32f7xx_it.c **** 
 173:Src/stm32f7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 174:Src/stm32f7xx_it.c **** }
 175:Src/stm32f7xx_it.c **** 
 176:Src/stm32f7xx_it.c **** /**
 177:Src/stm32f7xx_it.c ****   * @brief This function handles Debug monitor.
 178:Src/stm32f7xx_it.c ****   */
 179:Src/stm32f7xx_it.c **** void DebugMon_Handler(void)
 180:Src/stm32f7xx_it.c **** {
 150              		.loc 1 180 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0000 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE142:
 159              		.section	.text.PendSV_Handler,"ax",%progbits
 160              		.align	1
 161              		.global	PendSV_Handler
 162              		.syntax unified
 163              		.thumb
 164              		.thumb_func
 165              		.fpu fpv5-sp-d16
 167              	PendSV_Handler:
 168              	.LFB143:
 181:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 182:Src/stm32f7xx_it.c **** 
 183:Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 184:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 185:Src/stm32f7xx_it.c **** 
 186:Src/stm32f7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 187:Src/stm32f7xx_it.c **** }
 188:Src/stm32f7xx_it.c **** 
 189:Src/stm32f7xx_it.c **** /**
ARM GAS  C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s 			page 7


 190:Src/stm32f7xx_it.c ****   * @brief This function handles Pendable request for system service.
 191:Src/stm32f7xx_it.c ****   */
 192:Src/stm32f7xx_it.c **** void PendSV_Handler(void)
 193:Src/stm32f7xx_it.c **** {
 169              		.loc 1 193 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE143:
 178              		.section	.text.SysTick_Handler,"ax",%progbits
 179              		.align	1
 180              		.global	SysTick_Handler
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv5-sp-d16
 186              	SysTick_Handler:
 187              	.LFB144:
 194:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 195:Src/stm32f7xx_it.c **** 
 196:Src/stm32f7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 197:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 198:Src/stm32f7xx_it.c **** 
 199:Src/stm32f7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 200:Src/stm32f7xx_it.c **** }
 201:Src/stm32f7xx_it.c **** 
 202:Src/stm32f7xx_it.c **** /**
 203:Src/stm32f7xx_it.c ****   * @brief This function handles System tick timer.
 204:Src/stm32f7xx_it.c ****   */
 205:Src/stm32f7xx_it.c **** void SysTick_Handler(void)
 206:Src/stm32f7xx_it.c **** {
 188              		.loc 1 206 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		.loc 1 206 0
 193 0000 08B5     		push	{r3, lr}
 194              	.LCFI0:
 195              		.cfi_def_cfa_offset 8
 196              		.cfi_offset 3, -8
 197              		.cfi_offset 14, -4
 207:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 208:Src/stm32f7xx_it.c **** 
 209:Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 210:Src/stm32f7xx_it.c ****   HAL_IncTick();
 198              		.loc 1 210 0
 199 0002 FFF7FEFF 		bl	HAL_IncTick
 200              	.LVL0:
 201 0006 08BD     		pop	{r3, pc}
 202              		.cfi_endproc
 203              	.LFE144:
 205              		.section	.text.DMA1_Stream4_IRQHandler,"ax",%progbits
 206              		.align	1
 207              		.global	DMA1_Stream4_IRQHandler
ARM GAS  C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s 			page 8


 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 211              		.fpu fpv5-sp-d16
 213              	DMA1_Stream4_IRQHandler:
 214              	.LFB145:
 211:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 212:Src/stm32f7xx_it.c **** 
 213:Src/stm32f7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 214:Src/stm32f7xx_it.c **** }
 215:Src/stm32f7xx_it.c **** 
 216:Src/stm32f7xx_it.c **** /******************************************************************************/
 217:Src/stm32f7xx_it.c **** /* STM32F7xx Peripheral Interrupt Handlers                                    */
 218:Src/stm32f7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 219:Src/stm32f7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 220:Src/stm32f7xx_it.c **** /* please refer to the startup file (startup_stm32f7xx.s).                    */
 221:Src/stm32f7xx_it.c **** /******************************************************************************/
 222:Src/stm32f7xx_it.c **** 
 223:Src/stm32f7xx_it.c **** /**
 224:Src/stm32f7xx_it.c ****   * @brief This function handles DMA1 stream4 global interrupt.
 225:Src/stm32f7xx_it.c ****   */
 226:Src/stm32f7xx_it.c **** void DMA1_Stream4_IRQHandler(void)
 227:Src/stm32f7xx_it.c **** {
 215              		.loc 1 227 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219 0000 08B5     		push	{r3, lr}
 220              	.LCFI1:
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 3, -8
 223              		.cfi_offset 14, -4
 228:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */
 229:Src/stm32f7xx_it.c **** 	completed2 = 1;
 224              		.loc 1 229 0
 225 0002 0122     		movs	r2, #1
 226 0004 024B     		ldr	r3, .L17
 227 0006 1A70     		strb	r2, [r3]
 230:Src/stm32f7xx_it.c ****   /* USER CODE END DMA1_Stream4_IRQn 0 */
 231:Src/stm32f7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi2_tx);
 228              		.loc 1 231 0
 229 0008 0248     		ldr	r0, .L17+4
 230 000a FFF7FEFF 		bl	HAL_DMA_IRQHandler
 231              	.LVL1:
 232 000e 08BD     		pop	{r3, pc}
 233              	.L18:
 234              		.align	2
 235              	.L17:
 236 0010 00000000 		.word	.LANCHOR0
 237 0014 00000000 		.word	hdma_spi2_tx
 238              		.cfi_endproc
 239              	.LFE145:
 241              		.section	.text.DMA1_Stream5_IRQHandler,"ax",%progbits
 242              		.align	1
 243              		.global	DMA1_Stream5_IRQHandler
 244              		.syntax unified
 245              		.thumb
ARM GAS  C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s 			page 9


 246              		.thumb_func
 247              		.fpu fpv5-sp-d16
 249              	DMA1_Stream5_IRQHandler:
 250              	.LFB146:
 232:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */
 233:Src/stm32f7xx_it.c **** 
 234:Src/stm32f7xx_it.c ****   /* USER CODE END DMA1_Stream4_IRQn 1 */
 235:Src/stm32f7xx_it.c **** }
 236:Src/stm32f7xx_it.c **** 
 237:Src/stm32f7xx_it.c **** /**
 238:Src/stm32f7xx_it.c ****   * @brief This function handles DMA1 stream5 global interrupt.
 239:Src/stm32f7xx_it.c ****   */
 240:Src/stm32f7xx_it.c **** void DMA1_Stream5_IRQHandler(void)
 241:Src/stm32f7xx_it.c **** {
 251              		.loc 1 241 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255 0000 08B5     		push	{r3, lr}
 256              	.LCFI2:
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 3, -8
 259              		.cfi_offset 14, -4
 242:Src/stm32f7xx_it.c ****   /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */
 243:Src/stm32f7xx_it.c **** 	completed3 = 1;
 260              		.loc 1 243 0
 261 0002 0122     		movs	r2, #1
 262 0004 024B     		ldr	r3, .L21
 263 0006 1A70     		strb	r2, [r3]
 244:Src/stm32f7xx_it.c ****   /* USER CODE END DMA1_Stream5_IRQn 0 */
 245:Src/stm32f7xx_it.c ****   HAL_DMA_IRQHandler(&hdma_spi3_tx);
 264              		.loc 1 245 0
 265 0008 0248     		ldr	r0, .L21+4
 266 000a FFF7FEFF 		bl	HAL_DMA_IRQHandler
 267              	.LVL2:
 268 000e 08BD     		pop	{r3, pc}
 269              	.L22:
 270              		.align	2
 271              	.L21:
 272 0010 00000000 		.word	.LANCHOR1
 273 0014 00000000 		.word	hdma_spi3_tx
 274              		.cfi_endproc
 275              	.LFE146:
 277              		.global	completed3
 278              		.global	completed2
 279              		.section	.data.completed2,"aw",%progbits
 280              		.set	.LANCHOR0,. + 0
 283              	completed2:
 284 0000 01       		.byte	1
 285              		.section	.data.completed3,"aw",%progbits
 286              		.set	.LANCHOR1,. + 0
 289              	completed3:
 290 0000 01       		.byte	1
 291              		.text
 292              	.Letext0:
 293              		.file 2 "c:\\ac6\\systemworkbench\\plugins\\fr.ac6.mcu.externaltools.arm-none.win32_1.15.0.2017083
 294              		.file 3 "c:\\ac6\\systemworkbench\\plugins\\fr.ac6.mcu.externaltools.arm-none.win32_1.15.0.2017083
ARM GAS  C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s 			page 10


 295              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 296              		.file 5 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
 297              		.file 6 "Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f746xx.h"
 298              		.file 7 "c:\\ac6\\systemworkbench\\plugins\\fr.ac6.mcu.externaltools.arm-none.win32_1.15.0.2017083
 299              		.file 8 "c:\\ac6\\systemworkbench\\plugins\\fr.ac6.mcu.externaltools.arm-none.win32_1.15.0.2017083
 300              		.file 9 "c:\\ac6\\systemworkbench\\plugins\\fr.ac6.mcu.externaltools.arm-none.win32_1.15.0.2017083
 301              		.file 10 "c:\\ac6\\systemworkbench\\plugins\\fr.ac6.mcu.externaltools.arm-none.win32_1.15.0.201708
 302              		.file 11 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 303              		.file 12 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 304              		.file 13 "Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal.h"
ARM GAS  C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f7xx_it.c
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:18     .text.NMI_Handler:00000000 $t
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:38     .text.HardFault_Handler:00000000 $t
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:45     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:59     .text.MemManage_Handler:00000000 $t
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:66     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:80     .text.BusFault_Handler:00000000 $t
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:87     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:101    .text.UsageFault_Handler:00000000 $t
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:108    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:122    .text.SVC_Handler:00000000 $t
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:129    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:141    .text.DebugMon_Handler:00000000 $t
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:148    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:160    .text.PendSV_Handler:00000000 $t
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:167    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:179    .text.SysTick_Handler:00000000 $t
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:186    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:206    .text.DMA1_Stream4_IRQHandler:00000000 $t
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:213    .text.DMA1_Stream4_IRQHandler:00000000 DMA1_Stream4_IRQHandler
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:236    .text.DMA1_Stream4_IRQHandler:00000010 $d
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:242    .text.DMA1_Stream5_IRQHandler:00000000 $t
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:249    .text.DMA1_Stream5_IRQHandler:00000000 DMA1_Stream5_IRQHandler
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:272    .text.DMA1_Stream5_IRQHandler:00000010 $d
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:289    .data.completed3:00000000 completed3
C:\Users\ROUTHE~1\AppData\Local\Temp\ccUbCOPb.s:283    .data.completed2:00000000 completed2
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_DMA_IRQHandler
hdma_spi2_tx
hdma_spi3_tx
